-- DROP
DROP TABLE STUDENT;
DROP TABLE MAJOR;
DROP SEQUENCE STUDENT_SEQ;

--CREATE
CREATE TABLE MAJOR(
    MNO NUMBER(2),
    MNAME VARCHAR2(50),
    PRIMARY KEY(MNO)
);
CREATE SEQUENCE STUDENT_SEQ 
    MAXVALUE 999
    NOCACHE
    NOCYCLE;
    
CREATE TABLE STUDENT(
    SNO VARCHAR2(7),
    SNAME VARCHAR2(50),
    MNO NUMBER(2),
    SCORE NUMBER(3) DEFAULT 0 CHECK(SCORE>=0 AND SCORE<=100),
    EXPEL NUMBER(1) DEFAULT 0 CHECK(EXPEL=0 OR EXPEL=1),
    PRIMARY KEY(SNO),
    FOREIGN KEY(MNO) REFERENCES MAJOR(MNO)
);

-- 학과정보 입력 
INSERT INTO MAJOR VALUES (1, '빅데이터학');
INSERT INTO MAJOR VALUES (2, '경영정보학');
INSERT INTO MAJOR VALUES (3, '컴퓨터공학');
INSERT INTO MAJOR VALUES (4, '소프트웨어');
INSERT INTO MAJOR VALUES (5, '인공지능학');
SELECT * FROM MAJOR;
COMMIT;

--콘솔 StudentMng
-- 2021001식으로 만드는 쿼리
SELECT TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL, '000'))
    FROM DUAL;
SELECT TO_CHAR(SYSDATE, 'YYYY')||LPAD(STUDENT_SEQ.NEXTVAL, 3, '0') 
    FROM DUAL;

-- 1번 기능. 이름, 전공명, 점수를 입력받아 입력
--    학번은 시퀀스를 이용하여 "현재년도||순차번호"로 입력한다
INSERT INTO STUDENT (SNO, SNAME, MNO, SCORE) 
    VALUES (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL,'000')),
            '정우성', (SELECT MNO FROM MAJOR WHERE MNAME='빅데이터학'), 90);
INSERT INTO STUDENT (SNO, SNAME, MNO, SCORE) 
    VALUES (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL,'000')),
            '박세영', (SELECT MNO FROM MAJOR WHERE MNAME='빅데이터학'), 90);
INSERT INTO STUDENT (SNO, SNAME, MNO, SCORE) 
    VALUES (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL,'000')),
            '배수지', (SELECT MNO FROM MAJOR WHERE MNAME='컴퓨터공학'), 90);
INSERT INTO STUDENT (SNO, SNAME, MNO, SCORE) 
    VALUES (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL,'000')),
            '김제적', (SELECT MNO FROM MAJOR WHERE MNAME='컴퓨터공학'), 70);
INSERT INTO STUDENT (SNO, SNAME, MNO, SCORE) 
    VALUES (TO_CHAR(SYSDATE, 'YYYY')||TRIM(TO_CHAR(STUDENT_SEQ.NEXTVAL,'000')),
            '홍제적', (SELECT MNO FROM MAJOR WHERE MNAME='인공지능학'), 20);            
SELECT * FROM STUDENT;

--2번 기능. 원하는 학과이름을 입력받아
--    학과별 조회후 점수가 높은 순으로 출력
-- 1등    	정우성(2021001)     빅데이터학      	90'
SELECT ROWNUM RANK, SNAME||'('||SNO||')' SNAME, MNAME, SCORE
    FROM (SELECT * FROM STUDENT S, MAJOR M  
            WHERE S.MNO = M.MNO AND MNAME='컴퓨터공학'
            ORDER BY SCORE DESC); -- 방법1 

SELECT ROWNUM RANK, SNO, SNAME, MNAME, SCORE
    FROM (SELECT * FROM STUDENT S, MAJOR M
            WHERE S.MNO=M.MNO AND MNAME='컴퓨터공학'
            ORDER BY SCORE DESC); -- 

--3을 누르면  
-- 제적당하지 않은 전체 학생을 조회 후 점수가 높은 순 출력
--등수           이름         학과      	점수
--──────────────────────────────
--1등    	송혜교(2021005)     인공지능학     	100
SELECT ROWNUM RANK, SNAME||'('||SNO||')' SNAME, MNAME, SCORE
    FROM (SELECT * FROM STUDENT S, MAJOR M  
            WHERE S.MNO = M.MNO AND EXPEL=0
            ORDER BY SCORE DESC); -- 방법1 

SELECT ROWNUM RANK, SNO, SNAME, MNAME, SCORE
    FROM (SELECT * FROM STUDENT S, MAJOR M  
            WHERE S.MNO = M.MNO AND EXPEL=0
            ORDER BY SCORE DESC); -- 방법2 

--4를 누르면  
-- 제적당한 전체 학생을 조회 후 점수가 높은 순 출력
--등수           이름         학과      	점수
--──────────────────────────────
--1등    홍철수(2021006)     소프트웨어		20
SELECT ROWNUM RANK, SNAME||'('||SNO||')' SNAME, MNAME, SCORE
    FROM (SELECT * FROM STUDENT S, MAJOR M  
            WHERE S.MNO = M.MNO AND EXPEL=1
            ORDER BY SCORE DESC); -- 방법1 
SELECT ROWNUM RANK, SNO, SNAME, MNAME, SCORE
    FROM (SELECT * FROM STUDENT S, MAJOR M  
            WHERE S.MNO = M.MNO AND EXPEL=1
            ORDER BY SCORE DESC); -- 방법1 








